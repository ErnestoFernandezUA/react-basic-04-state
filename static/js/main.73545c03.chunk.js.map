{"version":3,"sources":["TypePicker.tsx","NewUserForm.tsx","UserItem.tsx","UsersList.tsx","App.tsx","index.tsx"],"names":["TypePicker","state","isOpen","toggle","setState","prevState","this","props","types","value","onChange","className","type","onClick","map","onKeyDown","React","Component","UserType","NewUserForm","username","handleSubmit","event","preventDefault","onAdd","setType","onSubmit","placeholder","target","UserItem","user","name","id","onDelete","onRename","UsersList","users","usersFromServer","App","addUser","newUser","Math","max","console","log","deleteUser","userId","filter","renameUser","style","backgroundColor","height","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAaaA,EAAb,4MACEC,MAAQ,CACNC,QAAQ,GAFZ,EAKEC,OAAS,WACP,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BH,QAASG,EAAUH,YAPzB,4CAWE,WAAU,IAAD,OACP,EAIII,KAAKC,MAHPC,EADF,EACEA,MACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,SAEMR,EAAWI,KAAKL,MAAhBC,OAER,OACE,sBAAKS,UAAU,aAAf,UACE,wBACEA,UAAU,qBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKV,UAHtB,SAKGM,GAAS,mBAGXP,GACC,oBAAIS,UAAU,mBAAd,SACGH,EAAMM,KAAI,SAAAF,GAAI,OAEb,aADA,CACA,MAEEC,QAAS,WACPH,EAASE,GACT,EAAKT,UAEPY,UAAW,aANb,SAQGH,GAPIA,eAlCrB,GAAgCI,IAAMC,WCThCC,G,MAAW,CAAC,OAAQ,WAAY,SAWzBC,EAAb,4MACElB,MAAQ,CACNmB,SAAU,GACVR,KAAM,IAHV,EAMES,aAAe,SAACC,GACdA,EAAMC,iBAED,EAAKtB,MAAMmB,WAIhB,EAAKb,MAAMiB,MAAM,EAAKvB,MAAMmB,SAAU,EAAKnB,MAAMW,MAEjD,EAAKR,SAAS,CACZgB,SAAU,GACVR,KAAM,OAjBZ,EAqBEa,QAAU,SAACb,GACT,EAAKR,SAAS,CACZQ,UAvBN,4CA2BE,WAAU,IAAD,OACP,OACE,uBACED,UAAU,cACVe,SAAUpB,KAAKe,aAFjB,UAIE,uBACET,KAAK,OACLe,YAAY,eACZlB,MAAOH,KAAKL,MAAMmB,SAClBV,SAAU,SAACY,GACT,EAAKlB,SAAS,CAAEgB,SAAUE,EAAMM,OAAOnB,WAG3C,cAAC,EAAD,CACED,MAAOU,EACPT,MAAOH,KAAKL,MAAMW,KAClBF,SAAUJ,KAAKmB,UAEjB,wBACEb,KAAK,SADP,wBA9CR,GAAiCI,IAAMC,WCG1BY,EAAb,4MACE5B,MAAQ,CACN6B,KAAM,EAAKvB,MAAMuB,MAFrB,4CAKE,WAAU,IAAD,OACP,EAGIxB,KAAKL,MAAM6B,KAFbC,EADF,EACEA,KACAC,EAFF,EAEEA,GAGF,EAGI1B,KAAKC,MAFP0B,EADF,EACEA,SACAC,EAFF,EAEEA,SAGF,OACE,mCACE,uBACER,SAAU,SAACJ,GACTA,EAAMC,iBACNW,EAASF,EAAID,IAHjB,UAMGzB,KAAKC,MAAMuB,KAAKE,GANnB,IAQG1B,KAAKC,MAAMuB,KAAKC,KARnB,IAUGzB,KAAKC,MAAMuB,KAAKlB,KACjB,uBACEA,KAAK,OACLH,MAAOsB,EACPrB,SAAU,SAACY,GACT,EAAKlB,UAAS,SAACC,GAAD,MAAgB,CAC5ByB,KAAK,2BACAzB,EAAUyB,MADX,IAEFC,KAAMT,EAAMM,OAAOnB,eAK3B,wBAAQG,KAAK,SAAb,kBACA,wBACEA,KAAK,SACLC,QAAS,kBAAMoB,EAASD,IAF1B,6BA1CV,GAA8BhB,IAAMC,WCHvBkB,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,MACAH,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,6BACGE,EAAMtB,KAAI,SAAAgB,GAAI,OACb,6BACE,cAAC,EAAD,CACEA,KAAMA,EACNG,SAAUA,EACVC,SAAUA,KAJLJ,EAAKE,UCRhBK,EAAkB,CACtB,CAAEL,GAAI,EAAGD,KAAM,OAAQnB,KAAM,QAC7B,CAAEoB,GAAI,EAAGD,KAAM,QAASnB,KAAM,QAC9B,CAAEoB,GAAI,EAAGD,KAAM,OAAQnB,KAAM,YAC7B,CAAEoB,GAAI,EAAGD,KAAM,QAASnB,KAAM,YAC9B,CAAEoB,GAAI,EAAGD,KAAM,QAASnB,KAAM,aAGnB0B,EAAb,4MACErC,MAAQ,CACNmC,MAAOC,GAFX,EAKEE,QAAU,SAACR,EAAcnB,GACvB,EAAKR,UAAS,SAACC,GACb,IAAMmC,EAAU,CACdR,GAAIS,KAAKC,IAAL,MAAAD,KAAI,YAAQpC,EAAU+B,MAAMtB,KAAI,SAAAgB,GAAI,OAAIA,EAAKE,QAAO,EACxDD,OACAnB,QAGF,MAAO,CACLwB,MAAM,GAAD,mBAAM/B,EAAU+B,OAAhB,CAAuBI,QAKhCG,QAAQC,IAAI,EAAK3C,MAAMmC,QAnB3B,EAsBES,WAAa,SAACC,GACZ,EAAK1C,UAAS,SAAAC,GAAS,MAAK,CAC1B+B,MAAO/B,EAAU+B,MAAMW,QACrB,SAAAjB,GAAI,OAAIA,EAAKE,KAAOc,UAzB5B,EA8BEE,WAAa,SAACF,EAAgBf,GAC5B,EAAK3B,UAAS,SAAAC,GAAS,MAAK,CAC1B+B,MAAO/B,EAAU+B,MAAMtB,KAAI,SAAAgB,GACzB,OAAIA,EAAKE,KAAOc,EACP,2BACFhB,GADL,IAEEC,SAIGD,UAxCf,4CA6CE,WACE,IACEM,EACE9B,KAAKL,MADPmC,MAMF,OAFAO,QAAQC,IAAI,QAASR,GAGnB,sBACEzB,UAAU,GACVsC,MAAO,CACLC,gBAAiB,MACjBC,OAAQ,QACRC,QAAS,QALb,UAQE,cAAC,EAAD,CACE5B,MAAOlB,KAAKiC,UAGd,cAAC,EAAD,CACEH,MAAOA,EACPH,SAAU3B,KAAKuC,WACfX,SAAU5B,KAAK0C,oBArEzB,GAAyBhC,IAAMC,WClB/BoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.73545c03.chunk.js","sourcesContent":["import React from 'react';\nimport './TypePicker.scss';\n\ntype Props = {\n  types: string[];\n  value: string;\n  onChange: (type: string) => void;\n};\n\ntype State = {\n  isOpen: boolean;\n};\n\nexport class TypePicker extends React.Component<Props, State> {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    const {\n      types,\n      value,\n      onChange,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    return (\n      <div className=\"TypePicker\">\n        <button\n          className=\"TypePicker__button\"\n          type=\"button\"\n          onClick={() => this.toggle()}\n        >\n          {value || 'Choose a color'}\n        </button>\n\n        {isOpen && (\n          <ul className=\"TypePicker__list\">\n            {types.map(type => (\n              // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n              <li\n                key={type}\n                onClick={() => {\n                  onChange(type);\n                  this.toggle();\n                }}\n                onKeyDown={() => {}}\n              >\n                {type}\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { TypePicker } from './TypePicker';\nimport './NewUserForm.scss';\n\nconst UserType = ['book', 'magazine', 'note'];\n\ntype Props = {\n  onAdd: (name: string, type: string) => void;\n};\n\ntype State = {\n  username: string;\n  type: string;\n};\n\nexport class NewUserForm extends React.Component<Props, State> {\n  state = {\n    username: '',\n    type: '',\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!this.state.username) {\n      return;\n    }\n\n    this.props.onAdd(this.state.username, this.state.type);\n\n    this.setState({\n      username: '',\n      type: '',\n    });\n  };\n\n  setType = (type: string) => {\n    this.setState({\n      type,\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"NewUserForm\"\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Enter a name\"\n          value={this.state.username}\n          onChange={(event) => {\n            this.setState({ username: event.target.value });\n          }}\n        />\n        <TypePicker\n          types={UserType}\n          value={this.state.type}\n          onChange={this.setType}\n        />\n        <button\n          type=\"submit\"\n        >\n          Add\n        </button>\n\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\ntype User = {\n  id: number;\n  name: string;\n  type: string;\n};\n\ntype Props = {\n  user: User;\n  onDelete: (userId: number) => void;\n  onRename: (userId: number, name: string) => void;\n};\n\ntype State = {\n  user: User;\n};\n\nexport class UserItem extends React.Component<Props, State> {\n  state = {\n    user: this.props.user,\n  };\n\n  render() {\n    const {\n      name,\n      id,\n    } = this.state.user;\n\n    const {\n      onDelete,\n      onRename,\n    } = this.props;\n\n    return (\n      <>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            onRename(id, name);\n          }}\n        >\n          {this.props.user.id}\n          -\n          {this.props.user.name}\n          -\n          {this.props.user.type}\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(event) => {\n              this.setState((prevState) => ({\n                user: {\n                  ...prevState.user,\n                  name: event.target.value,\n                },\n              }));\n            }}\n          />\n          <button type=\"submit\">Save</button>\n          <button\n            type=\"button\"\n            onClick={() => onDelete(id)}\n          >\n            Delete\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { UserItem } from './UserItem';\n\ntype User = {\n  id: number;\n  name: string;\n  type: string;\n};\n\ntype Props = {\n  users: User[];\n  onDelete: (userId: number) => void;\n  onRename: (userId: number, name: string) => void;\n};\n\nexport const UsersList: React.FC<Props> = ({\n  users,\n  onDelete,\n  onRename,\n}) => {\n  return (\n    <ul>\n      {users.map(user => (\n        <li key={user.id}>\n          <UserItem\n            user={user}\n            onDelete={onDelete}\n            onRename={onRename}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { NewUserForm } from './NewUserForm';\nimport { UsersList } from './UsersList';\n\ntype User = {\n  id: number;\n  name: string;\n  type: string;\n};\n\ntype State = {\n  users: User[];\n};\n\nconst usersFromServer = [\n  { id: 1, name: 'Anna', type: 'book' },\n  { id: 2, name: 'Laila', type: 'book' },\n  { id: 3, name: 'Lena', type: 'magazine' },\n  { id: 4, name: 'Petya', type: 'magazine' },\n  { id: 5, name: 'Kolya', type: 'magazine' },\n];\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    users: usersFromServer,\n  };\n\n  addUser = (name: string, type: string) => {\n    this.setState((prevState) => {\n      const newUser = {\n        id: Math.max(...prevState.users.map(user => user.id)) + 1,\n        name,\n        type,\n      };\n\n      return {\n        users: [...prevState.users, newUser],\n      };\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.users);\n  };\n\n  deleteUser = (userId: number) => {\n    this.setState(prevState => ({\n      users: prevState.users.filter(\n        user => user.id !== userId,\n      ),\n    }));\n  };\n\n  renameUser = (userId: number, name: string) => {\n    this.setState(prevState => ({\n      users: prevState.users.map(user => {\n        if (user.id === userId) {\n          return {\n            ...user,\n            name,\n          };\n        }\n\n        return user;\n      }),\n    }));\n  };\n\n  render() {\n    const {\n      users,\n    } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log('users', users);\n\n    return (\n      <div\n        className=\"\"\n        style={{\n          backgroundColor: 'red',\n          height: '100vh',\n          padding: '50px',\n        }}\n      >\n        <NewUserForm\n          onAdd={this.addUser}\n        />\n\n        <UsersList\n          users={users}\n          onDelete={this.deleteUser}\n          onRename={this.renameUser}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}