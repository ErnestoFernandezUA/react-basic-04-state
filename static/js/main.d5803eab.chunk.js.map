{"version":3,"sources":["NewUserForm.tsx","UserItem.tsx","UsersList.tsx","App.tsx","index.tsx"],"names":["NewUserForm","state","username","handleSubmit","event","preventDefault","props","onAdd","setState","onSubmit","this","type","placeholder","value","onChange","target","React","Component","UserItem","user","name","id","onRename","prevState","onClick","onDelete","UsersList","users","map","usersFromServer","App","addUser","newUser","Math","max","console","log","deleteUser","userId","filter","renameUser","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAUaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,IAFd,EAKEC,aAAe,SAACC,GACdA,EAAMC,iBAED,EAAKJ,MAAMC,WAIhB,EAAKI,MAAMC,MAAM,EAAKN,MAAMC,UAE5B,EAAKM,SAAS,CACZN,SAAU,OAfhB,4CAmBE,WAAU,IAAD,OACP,OACE,uBACEO,SAAUC,KAAKP,aADjB,UAGE,uBACEQ,KAAK,OACLC,YAAY,eACZC,MAAOH,KAAKT,MAAMC,SAClBY,SAAU,SAACV,GACT,EAAKI,SAAS,CACZN,SAAUE,EAAMW,OAAOF,WAI7B,wBACEF,KAAK,SADP,wBAlCR,GAAiCK,IAAMC,WCO1BC,EAAb,4MACEjB,MAAQ,CACNkB,KAAM,EAAKb,MAAMa,MAFrB,4CAKE,WAAU,IAAD,OACP,EAGIT,KAAKT,MAAMkB,KAFbC,EADF,EACEA,KACAC,EAFF,EAEEA,GAGF,OACE,qCACGX,KAAKJ,MAAMa,KAAKC,KACjB,uBACEX,SAAU,SAACL,GACTA,EAAMC,iBACN,EAAKC,MAAMgB,SAASD,EAAID,IAH5B,UAME,uBACET,KAAK,OACLE,MAAOO,EACPN,SAAU,SAACV,GACT,EAAKI,UAAS,SAACe,GAAD,MAAgB,CAC5BJ,KAAK,2BACAI,EAAUJ,MADX,IAEFC,KAAMhB,EAAMW,OAAOF,eAK3B,wBAAQF,KAAK,SAAb,qBAEF,wBACEA,KAAK,SACLa,QAAS,kBAAM,EAAKlB,MAAMmB,SAASJ,IAFrC,2BAlCR,GAA8BL,IAAMC,WCHvBS,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,MACAF,EAEI,EAFJA,SACAH,EACI,EADJA,SAEA,OACE,6BACGK,EAAMC,KAAI,SAAAT,GAAI,OACb,6BACE,cAAC,EAAD,CACEA,KAAMA,EACNM,SAAUA,EACVH,SAAUA,KAJLH,EAAKE,UCRhBQ,EAAkB,CACtB,CAAER,GAAI,EAAGD,KAAM,QACf,CAAEC,GAAI,EAAGD,KAAM,SACf,CAAEC,GAAI,EAAGD,KAAM,SAGJU,EAAb,4MACE7B,MAAQ,CACN0B,MAAOE,GAFX,EAqBEE,QAAU,SAACX,GACT,EAAKZ,UAAS,SAAAe,GACZ,IAAMS,EAAU,CACdX,GAAIY,KAAKC,IAAL,MAAAD,KAAI,YAAQV,EAAUI,MAAMC,KAAI,SAAAT,GAAI,OAAIA,EAAKE,QAAO,EACxDD,QAGF,MAAO,CACLO,MAAM,GAAD,mBAAMJ,EAAUI,OAAhB,CAAuBK,QAKhCG,QAAQC,IAAI,EAAKnC,MAAM0B,QAlC3B,EAqCEU,WAAa,SAACC,GACZ,EAAK9B,UAAS,SAAAe,GAAS,MAAK,CAC1BI,MAAOJ,EAAUI,MAAMY,QACrB,SAAApB,GAAI,OAAIA,EAAKE,KAAOiB,UAxC5B,EA6CEE,WAAa,SAACF,EAAgBlB,GAC5B,EAAKZ,UAAS,SAAAe,GAAS,MAAK,CAC1BI,MAAOJ,EAAUI,MAAMC,KAAI,SAAAT,GACzB,OAAIA,EAAKE,KAAOiB,EACP,2BACFnB,GADL,IAEEC,SAIGD,UAvDf,4CA4DE,WACE,IACEQ,EACEjB,KAAKT,MADP0B,MAMF,OAFAQ,QAAQC,IAAIT,GAGV,sBAAKc,UAAU,GAAf,UACE,cAAC,EAAD,CACElC,MAAOG,KAAKqB,UAGd,cAAC,EAAD,CACEJ,MAAOA,EACPF,SAAUf,KAAK2B,WACff,SAAUZ,KAAK8B,oBA7EzB,GAAyBxB,IAAMC,WCf/ByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d5803eab.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  onAdd: (name: string) => void;\n};\n\ntype State = {\n  username: string;\n};\n\nexport class NewUserForm extends React.Component<Props, State> {\n  state = {\n    username: '',\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!this.state.username) {\n      return;\n    }\n\n    this.props.onAdd(this.state.username);\n\n    this.setState({\n      username: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Enter a name\"\n          value={this.state.username}\n          onChange={(event) => {\n            this.setState({\n              username: event.target.value,\n            });\n          }}\n        />\n        <button\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\ntype User = {\n  id: number;\n  name: string;\n};\n\ntype Props = {\n  user: User;\n  onDelete: (userId: number) => void;\n  onRename: (userId: number, name: string) => void;\n};\n\ntype State = {\n  user: User;\n};\n\nexport class UserItem extends React.Component<Props, State> {\n  state = {\n    user: this.props.user,\n  };\n\n  render() {\n    const {\n      name,\n      id,\n    } = this.state.user;\n\n    return (\n      <>\n        {this.props.user.name}\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            this.props.onRename(id, name);\n          }}\n        >\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(event) => {\n              this.setState((prevState) => ({\n                user: {\n                  ...prevState.user,\n                  name: event.target.value,\n                },\n              }));\n            }}\n          />\n          <button type=\"submit\">Save</button>\n        </form>\n        <button\n          type=\"button\"\n          onClick={() => this.props.onDelete(id)}\n        >\n          Delete\n        </button>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { UserItem } from './UserItem';\n\ntype User = {\n  id: number;\n  name: string;\n};\n\ntype Props = {\n  users: User[];\n  onDelete: (userId: number) => void;\n  onRename: (userId: number, name: string) => void;\n};\n\nexport const UsersList: React.FC<Props> = ({\n  users,\n  onDelete,\n  onRename,\n}) => {\n  return (\n    <ul>\n      {users.map(user => (\n        <li key={user.id}>\n          <UserItem\n            user={user}\n            onDelete={onDelete}\n            onRename={onRename}\n          />\n          {/* {user.name}\n          <form\n            onSubmit={() => {}}\n          >\n            <input\n              type=\"text\"\n              value={user.name}\n              onChange={(event) => onRename(user.id, event.target.value)}\n            />\n            <button type=\"submit\">Save</button>\n          </form>\n          <button\n            type=\"button\"\n            onClick={() => onDelete(user.id)}\n          >\n            Delete\n          </button> */}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { NewUserForm } from './NewUserForm';\nimport { UsersList } from './UsersList';\n\ntype User = {\n  id: number;\n  name: string;\n};\n\ntype State = {\n  users: User[];\n};\n\nconst usersFromServer = [\n  { id: 1, name: 'Anna' },\n  { id: 2, name: 'Laila' },\n  { id: 3, name: 'Lena' },\n];\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    users: usersFromServer,\n  };\n\n  // addStudent = () => {\n  //   this.setState((prevState) => ({ studentsCount: prevState.studentsCount + 1 }));\n  // };\n\n  // removeStudent = () => {\n  //   this.setState((prevState) => ({ studentsCount: prevState.studentsCount - 1 }));\n  // };\n\n  // addEmployee = () => {\n  //   this.setState((prevState) => ({ employeesCount: prevState.employeesCount + 1 }));\n  // };\n\n  // removeEmployee = () => {\n  //   this.setState((prevState) => ({ employeesCount: prevState.employeesCount - 1 }));\n  // };\n\n  addUser = (name: string) => {\n    this.setState(prevState => {\n      const newUser = {\n        id: Math.max(...prevState.users.map(user => user.id)) + 1,\n        name,\n      };\n\n      return {\n        users: [...prevState.users, newUser],\n      };\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.users);\n  };\n\n  deleteUser = (userId: number) => {\n    this.setState(prevState => ({\n      users: prevState.users.filter(\n        user => user.id !== userId,\n      ),\n    }));\n  };\n\n  renameUser = (userId: number, name: string) => {\n    this.setState(prevState => ({\n      users: prevState.users.map(user => {\n        if (user.id === userId) {\n          return {\n            ...user,\n            name,\n          };\n        }\n\n        return user;\n      }),\n    }));\n  };\n\n  render() {\n    const {\n      users,\n    } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log(users);\n\n    return (\n      <div className=\"\">\n        <NewUserForm\n          onAdd={this.addUser}\n        />\n\n        <UsersList\n          users={users}\n          onDelete={this.deleteUser}\n          onRename={this.renameUser}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}